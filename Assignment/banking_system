create database newbank;
use newbank;


create table customers (
    customer_id int primary key identity(1,1),
    first_name varchar(50),
    last_name varchar(50),
    dob date,
    email varchar(100),
    phone_number varchar(15),
    address varchar(255)
);

create table accounts (
    account_id int primary key identity(1,1),
    customer_id int,
    account_type varchar(20) check (account_type in ('savings', 'current', 'zero_balance')),
    balance decimal(12,2),
    foreign key (customer_id) references customers(customer_id)
);

create table transactions (
    transaction_id int primary key identity(1,1),
    account_id int,
    transaction_type varchar(20) check (transaction_type in ('deposit', 'withdrawal', 'transfer')),
    amount decimal(12,2),
    transaction_date date,
    foreign key (account_id) references accounts(account_id)
);


insert into customers (first_name, last_name, dob, email, phone_number, address) values
('arjun', 'kumar', '1990-05-12', 'arjun.kumar@example.com', '9876543001', 'delhi'),
('sneha', 'sharma', '1992-08-23', 'sneha.sharma@example.com', '9876543002', 'mumbai'),
('rahul', 'singh', '1988-12-10', 'rahul.singh@example.com', '9876543003', 'kolkata'),
('priya', 'mehta', '1995-03-17', 'priya.mehta@example.com', '9876543004', 'delhi'),
('vikram', 'gupta', '1991-07-30', 'vikram.gupta@example.com', '9876543005', 'chennai'),
('anjali', 'verma', '1993-11-09', 'anjali.verma@example.com', '9876543006', 'hyderabad'),
('manoj', 'rathi', '1987-06-25', 'manoj.rathi@example.com', '9876543007', 'pune'),
('divya', 'joshi', '1996-02-14', 'divya.joshi@example.com', '9876543008', 'jaipur'),
('rohit', 'yadav', '1994-09-21', 'rohit.yadav@example.com', '9876543009', 'bhopal'),
('meena', 'chauhan', '1990-01-02', 'meena.chauhan@example.com', '9876543010', 'lucknow');

insert into accounts (customer_id, account_type, balance) values
(1, 'savings', 15000),
(2, 'current', 25000),
(3, 'savings', 0),
(4, 'zero_balance', 500),
(5, 'savings', 100000),
(6, 'current', 900),
(7, 'savings', 0),
(8, 'current', 14000),
(9, 'savings', 5600),
(10, 'zero_balance', 350);

insert into transactions (account_id, transaction_type, amount, transaction_date) values
(1, 'deposit', 5000, '2024-01-10'),
(1, 'withdrawal', 2000, '2024-01-15'),
(2, 'transfer', 10000, '2024-02-01'),
(3, 'deposit', 3000, '2024-02-20'),
(4, 'withdrawal', 200, '2024-03-01'),
(5, 'deposit', 15000, '2024-03-05'),
(6, 'deposit', 1200, '2024-03-07'),
(7, 'withdrawal', 500, '2024-04-01'),
(8, 'transfer', 8000, '2024-04-05'),
(9, 'deposit', 2200, '2024-04-10');


-- 1
select first_name, last_name, account_type, email from customers c join accounts a on c.customer_id = a.customer_id;
-- 2
select t.*, c.first_name, c.last_name from transactions t join accounts a on t.account_id = a.account_id join customers c on a.customer_id = c.customer_id;
-- 3
update accounts set balance = balance + 1000 where account_id = 1;
-- 4
select concat(first_name, ' ', last_name) as full_name from customers;
-- 5
delete from accounts where balance = 0 and account_type = 'savings';
-- 6
select * from customers where address = 'delhi';
-- 7
select balance from accounts where account_id = 2;
-- 8
select * from accounts where account_type = 'current' and balance > 1000;
-- 9
select * from transactions where account_id = 1;
-- 10
select account_id, balance * 0.04 as interest from accounts where account_type = 'savings';
-- 11
select * from accounts where balance < 1000;
-- 12
select * from customers where address <> 'delhi';

-- Queries for Task 3
-- 1
select avg(balance) as avg_balance from accounts;
-- 2
select * from accounts order by balance desc limit 10;
-- 3
select sum(amount) as total_deposit from transactions where transaction_type = 'deposit' and transaction_date = '2024-04-01';
-- 4
select * from customers order by dob asc limit 1;
select * from customers order by dob desc limit 1;
-- 5
select t.*, a.account_type from transactions t join accounts a on t.account_id = a.account_id;
-- 6
select c.*, a.account_type, a.balance from customers c join accounts a on c.customer_id = a.customer_id;
-- 7
select t.*, c.* from transactions t join accounts a on t.account_id = a.account_id join customers c on a.customer_id = c.customer_id where t.account_id = 1;
-- 8
select customer_id from accounts group by customer_id having count(account_id) > 1;
-- 9
select (select sum(amount) from transactions where transaction_type = 'deposit') - (select sum(amount) from transactions where transaction_type = 'withdrawal') as transaction_diff;
-- 10
-- Skipped due to lack of transaction history with dates per day
-- 11
select account_type, sum(balance) as total_balance from accounts group by account_type;
-- 12
select account_id, count(transaction_id) as txn_count from transactions group by account_id order by txn_count desc;
-- 13
select c.first_name, c.last_name, a.account_type, sum(a.balance) as total_balance from customers c join accounts a on c.customer_id = a.customer_id group by c.customer_id, a.account_type having total_balance > 10000;
-- 14
select account_id, amount, transaction_date, count(*) from transactions group by account_id, amount, transaction_date having count(*) > 1;

-- Task 4: Subqueries
-- 1
select * from accounts where balance = (select max(balance) from accounts);
-- 2
select avg(balance) from accounts where customer_id in (select customer_id from accounts group by customer_id having count(*) > 1);
-- 3
select * from transactions where amount > (select avg(amount) from transactions);
-- 4
select * from customers where customer_id not in (select a.customer_id from accounts a join transactions t on a.account_id = t.account_id);
-- 5
select sum(balance) from accounts where account_id not in (select account_id from transactions);
-- 6
select * from transactions where account_id = (select account_id from accounts order by balance asc limit 1);
-- 7
select customer_id from accounts group by customer_id having count(distinct account_type) > 1;
-- 8
select account_type, count(*) * 100.0 / (select count(*) from accounts) as percentage from accounts group by account_type;
-- 9
select * from transactions where account_id in (select account_id from accounts where customer_id = 1);
-- 10
select account_type, (select sum(balance) from accounts a2 where a2.account_type = a1.account_type) as total_balance from accounts a1 group by account_type;
